{
  "version": 3,
  "sources": [
    "services/Utils.js",
    "services/UserServices.js",
    "components/UserContext.js",
    "pages/Login/SignInSide.js",
    "pages/Login/index.js",
    "pages/signup/SignUp.js",
    "pages/Screen2/UserList.js",
    "services/Screen2Services.js",
    "components/TimetableContext.js",
    "pages/Screen2/Summary.js",
    "components/Navbar.js",
    "services/FileServices.js",
    "pages/Screen2/index.js",
    "components/Dropdown.js",
    "pages/Screen3/CheckedTextBox.js",
    "pages/Screen3/EndPredicates.js",
    "pages/Screen3/AlgorithmConfiguration.js",
    "components/CircularIndeterminate.js",
    "pages/Screen3/TimetableDetails.js",
    "pages/Screen3/InfoTabs.js",
    "services/Screen3Services.js",
    "pages/Screen3/OtherSolutions.js",
    "pages/Screen3/TeacherView.js",
    "pages/Screen3/SolutionDialog.js",
    "pages/Screen3/index.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "fetchWrapper",
    "_x",
    "_x2",
    "_x3",
    "_fetchWrapper",
    "apply",
    "this",
    "arguments",
    "_callee",
    "method",
    "url",
    "object",
    "options",
    "result",
    "responseBody",
    "regenerator_default",
    "a",
    "wrap",
    "_context",
    "prev",
    "next",
    "headers",
    "Content-Type",
    "redirect",
    "referrerPolicy",
    "body",
    "JSON",
    "stringify",
    "fetch",
    "sent",
    "get",
    "includes",
    "json",
    "text",
    "ok",
    "Error",
    "abrupt",
    "stop",
    "login",
    "_login",
    "username",
    "userObject",
    "Utils",
    "t0",
    "console",
    "log",
    "UserContext",
    "createContext",
    "document",
    "cookie",
    "renderAlert",
    "alertText",
    "react",
    "Alert",
    "severity",
    "AlertTitle",
    "USER_NAME_EMPTY",
    "USER_NAME_NOT_UNIQUE",
    "SUCCESSFUL_LOGIN",
    "SCREEN2URL",
    "theme",
    "createTheme",
    "SignInSide",
    "_useState",
    "useState",
    "_useState2",
    "Object",
    "slicedToArray",
    "userName",
    "setUserName",
    "_React$useState",
    "React",
    "_React$useState2",
    "setAlertText",
    "_useContext",
    "useContext",
    "setCurrentUser",
    "currentUser",
    "history",
    "useHistory",
    "handleSubmit",
    "_ref",
    "asyncToGenerator",
    "mark",
    "event",
    "preventDefault",
    "UserServices",
    "initUserAndGoToScreen2",
    "concat",
    "path",
    "push",
    "routeChange",
    "ThemeProvider",
    "Grid",
    "container",
    "component",
    "sx",
    "height",
    "CssBaseline",
    "item",
    "xs",
    "sm",
    "md",
    "backgroundImage",
    "backgroundRepeat",
    "backgroundColor",
    "t",
    "palette",
    "mode",
    "grey",
    "backgroundSize",
    "backgroundPosition",
    "Paper",
    "elevation",
    "square",
    "Box",
    "my",
    "mx",
    "display",
    "flexDirection",
    "alignItems",
    "Avatar",
    "m",
    "bgcolor",
    "LockOutlined_default",
    "Typography",
    "variant",
    "noValidate",
    "onSubmit",
    "mt",
    "TextField",
    "margin",
    "required",
    "fullWidth",
    "id",
    "label",
    "name",
    "autoComplete",
    "autoFocus",
    "onChange",
    "e",
    "target",
    "value",
    "Button",
    "type",
    "mb",
    "onClick",
    "Link",
    "href",
    "Index",
    "react_default",
    "createElement",
    "Copyright",
    "props",
    "assign",
    "color",
    "align",
    "Date",
    "getFullYear",
    "SignUp",
    "Container",
    "maxWidth",
    "marginTop",
    "FormData",
    "currentTarget",
    "spacing",
    "FormControlLabel",
    "control",
    "Checkbox",
    "justifyContent",
    "useStyles",
    "makeStyles",
    "root",
    "width",
    "icon",
    "UserList",
    "users",
    "classes",
    "className",
    "List",
    "map",
    "user",
    "ListItem",
    "key",
    "ListItemAvatar",
    "PersonOutlined_default",
    "ListItemText",
    "primary",
    "getAll",
    "_getAll",
    "TimetableContext",
    "bull",
    "transform",
    "SCREEN3URL",
    "Summary",
    "data",
    "ID",
    "localTimetable",
    "setCurrentTimetableID",
    "currentTimetableID",
    "handleTimeTableClicked",
    "_ref2",
    "Card",
    "minWidth",
    "CardContent",
    "fontSize",
    "gutterBottom",
    "uploadedBy",
    "days",
    "hours",
    "numOfClasses",
    "numOfTeachers",
    "numOfHardRules",
    "numOfSoftRules",
    "numOfUsersSolving",
    "bestScore",
    "CardActions",
    "size",
    "toolbar",
    "Navbar",
    "flexGrow",
    "AppBar",
    "position",
    "Toolbar",
    "uploadFile",
    "_uploadFile",
    "_callee2",
    "file",
    "_context2",
    "fetchXmlWrapper",
    "_x4",
    "padding",
    "minHeight",
    "aroundButton",
    "summaries",
    "button",
    "setUsers",
    "_useState3",
    "_useState4",
    "setSummaries",
    "_useState5",
    "_useState6",
    "setSelectedFile",
    "useEffect",
    "fetchAllData",
    "dashboardPayload",
    "Screen2Services",
    "toConsumableArray",
    "timetables",
    "interval",
    "setInterval",
    "clearInterval",
    "handleFileUpload",
    "files",
    "FileServices",
    "direction",
    "hidden",
    "accept",
    "summary",
    "formControl",
    "selectEmpty",
    "DropDown",
    "currentValue",
    "keyPropName",
    "namePropName",
    "tempOptions",
    "sort",
    "s1",
    "s2",
    "localeCompare",
    "extendedOptions",
    "defineProperty",
    "FormControl",
    "InputLabel",
    "Select",
    "option",
    "MenuItem",
    "CheckedTextBox",
    "handleValueChange",
    "valueError",
    "checked",
    "setChecked",
    "undefined",
    "disabled",
    "error",
    "helperText",
    "EndPredicates",
    "endPredicates",
    "handleEndPredicatesChange",
    "floatRegEx",
    "setValueError",
    "handleTextChanged",
    "predicateName",
    "test",
    "objectSpread",
    "parseFloat",
    "Screen3_CheckedTextBox",
    "numOfGenerations",
    "fitnessScore",
    "time",
    "intRegEx",
    "selectionTypes",
    "crossoverTypes",
    "orientations",
    "mutationTypes",
    "flippingComponent",
    "AlgorithmConfiguration",
    "algorithmConfiguration",
    "handleAlgorithmConfigSave",
    "setData",
    "strideError",
    "setStrideError",
    "populationSizeError",
    "setPopulationSizeError",
    "_useState7",
    "_useState8",
    "elitismError",
    "setElitismError",
    "_useState9",
    "_useState10",
    "pteError",
    "setPteError",
    "_useState11",
    "_useState12",
    "topPercentError",
    "setTopPercentError",
    "_useState13",
    "_useState14",
    "cuttingPointsError",
    "setCuttingPointsError",
    "_useState15",
    "_useState16",
    "probabilityError",
    "setProbabilityError",
    "_useState17",
    "_useState18",
    "maxTuplesError",
    "setMaxTuplesError",
    "_useState19",
    "_useState20",
    "totalTuplesError",
    "setTotalTuplesError",
    "handleStrideChange",
    "useCallback",
    "trim",
    "stride",
    "parseInt",
    "handlePopulationSizeChange",
    "engineSettings",
    "populationSize",
    "setValueInSelection",
    "propName",
    "selection",
    "handleElitismChange",
    "handlePTEChange",
    "handleTopPercentChange",
    "handleCuttingPointsChange",
    "setValueInCrossover",
    "crossover",
    "handleAddMutation",
    "mutationsArray",
    "mutations",
    "newEmptyMutation",
    "newMutationsArray",
    "setValueInMutation",
    "index",
    "mutation",
    "slice",
    "handleProbabilityChange",
    "handleTotalTuplesChange",
    "handleMaxTuplesChange",
    "renderMutation",
    "defaultValue",
    "probability",
    "renderMutationExtraFields",
    "totalTuples",
    "maxTuples",
    "saveEnabled",
    "Accordion",
    "AccordionSummary",
    "expandIcon",
    "ExpandMore_default",
    "aria-controls",
    "AccordionDetails",
    "Screen3_EndPredicates",
    "elitism",
    "pte",
    "topPercent",
    "cuttingPoints",
    "orientation",
    "IconButton",
    "Add_default",
    "ButtonGroup",
    "CircularIndeterminate",
    "CircularProgress",
    "settings",
    "requirements",
    "schoolClass",
    "border",
    "borderBlockColor",
    "TimetableDetails",
    "timetable",
    "hardRulesWeight",
    "rules",
    "rule",
    "ruleName",
    "totalHours",
    "ruleType",
    "keys",
    "schoolClasses",
    "requirement",
    "subject",
    "subjects",
    "teachers",
    "workingHours",
    "subjectKey",
    "TabPanel",
    "children",
    "other",
    "objectWithoutProperties",
    "role",
    "aria-labelledby",
    "p",
    "a11yProps",
    "InfoTabs",
    "setValue",
    "Tabs",
    "newValue",
    "scrollButtons",
    "indicatorColor",
    "textColor",
    "aria-label",
    "Tab",
    "Equalizer_default",
    "Description_default",
    "Screen3_AlgorithmConfiguration",
    "Screen3_TimetableDetails",
    "getTimetableDetails",
    "timetableID",
    "getAlgoConfig",
    "getOtherSolutionsInfo",
    "_ref3",
    "_callee3",
    "_context3",
    "getProgress",
    "_ref4",
    "_callee4",
    "_context4",
    "getBestSolution",
    "_ref5",
    "_callee5",
    "_context5",
    "_x5",
    "OtherSolutions",
    "otherSolutionsList",
    "length",
    "solution",
    "currentGeneration",
    "timeSlotToString",
    "quintets",
    "slotString",
    "i",
    "id1",
    "schoolClassID",
    "schoolClassName",
    "id2",
    "subjectID",
    "subjectName",
    "TeacherView",
    "rows",
    "matrix",
    "Array",
    "elem",
    "h",
    "d",
    "hour",
    "day",
    "displayMatrix",
    "generateMatrix",
    "TableContainer",
    "Table",
    "TableHead",
    "TableRow",
    "TableCell",
    "from",
    "TableBody",
    "row",
    "&:last-child td, &:last-child th",
    "scope",
    "grid",
    "actions",
    "tempGrid",
    "SolutionDialog",
    "handleClose",
    "Dialog",
    "onClose",
    "open",
    "DialogTitle",
    "Screen3_TeacherView",
    "solutionQuintets",
    "progressRow",
    "Screen3",
    "setTimetable",
    "otherSolutions",
    "setOtherSolutions",
    "progress",
    "setProgress",
    "bestSolution",
    "setBestSolution",
    "emptyAlgoConfig",
    "setAlgorithmConfiguration",
    "_React$useState3",
    "_React$useState4",
    "isFetching",
    "setIsFetching",
    "isRunning",
    "setIsRunning",
    "_React$useState5",
    "_React$useState6",
    "setOpen",
    "fetchStaticData",
    "_yield$Promise$all",
    "_yield$Promise$all2",
    "timetableResult",
    "algoConfigResult",
    "Promise",
    "all",
    "Screen3Services",
    "finish",
    "fetchIntervalData",
    "_yield$Promise$all3",
    "_yield$Promise$all4",
    "otherSolutionsResult",
    "progressResult",
    "bestSolutionResult",
    "handleStart",
    "handlePause",
    "handleStop",
    "handleResume",
    "_callee6",
    "_context6",
    "handleSolutionClick",
    "Screen3_InfoTabs",
    "Screen3_SolutionDialog",
    "generationNum",
    "bestScoreInGeneration",
    "Screen3_OtherSolutions",
    "getCookieDetail",
    "ca",
    "decodeURIComponent",
    "split",
    "c",
    "charAt",
    "substring",
    "indexOf",
    "App",
    "userProviderValue",
    "useMemo",
    "timetableProviderValue",
    "Provider",
    "react_router_dom",
    "react_router",
    "exact",
    "Login",
    "Screen2",
    "pages_Screen3",
    "ReactDOM",
    "render",
    "StrictMode",
    "App_App",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.c318c69d.chunk.js",
  "sourcesContent": [
    "export async function fetchWrapper(method, url, object) {\r\n    const options = {\r\n        method,\r\n        headers: {'Content-Type': 'application/json',},\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n    }\r\n\r\n    if (object) {\r\n        options.body = JSON.stringify(object);\r\n    }\r\n\r\n    const result = await fetch(url, options);\r\n    let responseBody;\r\n\r\n    if (result.headers.get(\"content-type\").includes(\"application/json\")) {\r\n        responseBody = await result.json();\r\n    } else {\r\n        responseBody = await result.text();\r\n    }\r\n    if (!result.ok) {\r\n        throw new Error(\"error\") //todo create an exception that get the response.body , status code, status text\r\n    }\r\n\r\n    return responseBody;\r\n}",
    "import * as Utils from \"./Utils\";\r\n\r\nexport async function login(username) {\r\n    const userObject = {\"username\":username};\r\n    const url =\"/server_Web_exploded/api/login\";\r\n    const method = 'POST';\r\n    let result;\r\n    try {\r\n         result = await Utils.fetchWrapper(method, url, userObject);\r\n    }catch (e){\r\n        console.log(e)\r\n    }\r\n    return result ;\r\n}\r\n",
    "import {createContext} from \"react\";\r\nexport const UserContext = createContext(document.cookie||null);// if we have a cookie, that the userContext value",
    "import * as React from 'react';\r\nimport {useContext, useState} from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport * as UserServices from '../../services/UserServices'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport {UserContext} from \"../../components/UserContext\";\r\n\r\n\r\nconst renderAlert = (alertText) => {\r\n    return (\r\n        <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            {alertText}\r\n        </Alert>\r\n    );\r\n}\r\n\r\nconst USER_NAME_EMPTY = \"empty name\";\r\nconst USER_NAME_NOT_UNIQUE = \"not unique name\";\r\nconst SUCCESSFUL_LOGIN = \"successful login\";\r\nconst SCREEN2URL = \"/server_Web_exploded/screen2\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignInSide() {\r\n    const [userName, setUserName] = useState();\r\n    const [alertText, setAlertText] = React.useState('');\r\n    const {currentUser, setCurrentUser} =useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () =>{\r\n        let path = SCREEN2URL;\r\n        history.push(path);\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const result = await UserServices.login(userName);\r\n        switch (result){\r\n            case SUCCESSFUL_LOGIN:\r\n                initUserAndGoToScreen2();\r\n                break;\r\n            case USER_NAME_EMPTY:\r\n                setAlertText('User name cannot be empty, please type at least one character');\r\n                break;\r\n            case USER_NAME_NOT_UNIQUE:\r\n                setAlertText('User name already exists, please enter a different name');\r\n                break;\r\n            default:\r\n                setAlertText('Unexpected Error, please contact support');\r\n                break;\r\n        }\r\n    };\r\n    const initUserAndGoToScreen2=()=>{\r\n        document.cookie= `username=${userName};path=/`\r\n        setCurrentUser(userName)\r\n        routeChange();\r\n    }\r\n\r\n    const handleUserNameChanged = (e)=>{\r\n        setUserName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    sx={{\r\n                        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: (t) =>\r\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                            {alertText && renderAlert(alertText)}\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"userName\"\r\n                                label=\"please enter a unique user name\"\r\n                                name=\"userName\"\r\n                                autoComplete=\"userName\"\r\n                                autoFocus\r\n                                onChange = {handleUserNameChanged}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{mt: 3, mb: 2}}\r\n                                onClick={() => {\r\n                                }}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Link href=\"/signup\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n",
    "import React from 'react';\r\nimport SignInSide from \"./SignInSide\";\r\n\r\nconst Index = ({setCurrentUser}) => {\r\n    return (\r\n        <SignInSide setCurrentUser={setCurrentUser}/>\r\n    )\r\n}\r\nexport default Index;",
    "import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignUp() {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        // eslint-disable-next-line no-console\r\n        // console.log({\r\n        //     email: data.get('email'),\r\n        //     password: data.get('password'),\r\n        // });\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"userName\"\r\n                                    label=\"please enter a unique user name\"\r\n                                    name=\"userName\"\r\n                                    autoComplete=\"userName\"\r\n                                    autoFocus\r\n                                    // onChange = {handleUserNameChanged}\r\n                                    onChange={console.log(\"onchange\")}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\r\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/userLogin\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 5}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}",
    "import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport {List, ListItemAvatar} from \"@mui/material\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 400,\r\n        maxWidth: 300,\r\n        backgroundColor: 'lightblue',\r\n    },\r\n    icon: {\r\n        backgroundColor: 'lightpink',\r\n        color: 'lightblue',\r\n    },\r\n}));\r\n\r\n\r\nexport default function UserList({users}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <List>\r\n                {users.map(user => {\r\n                        return (<ListItem key={user}>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.icon}>\r\n                                    <PersonOutlinedIcon/>\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={user}\r\n                            />\r\n                        </ListItem>)\r\n                    }\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n",
    "import * as Utils from \"./Utils\";\r\n\r\nexport async function getAll() {\r\n    const url = \"/server_Web_exploded/api/dashboard\";\r\n    const method = 'GET';\r\n    const result = await Utils.fetchWrapper(method, url, null);\r\n    return result;\r\n}",
    "import {createContext} from \"react\";\r\nexport const TimetableContext = createContext(null);",
    "import * as React from 'react';\r\nimport {useContext, useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {TimetableContext} from \"../../components/TimetableContext\";\r\n\r\nconst bull = (\r\n    <Box\r\n        component=\"span\"\r\n        sx={{display: 'inline-block', mx: '2px', transform: 'scale(0.8)'}}\r\n    >\r\n        •\r\n    </Box>\r\n);\r\n\r\nconst SCREEN3URL = \"/server_Web_exploded/screen3\";\r\n\r\nexport default function Summary({data}) {\r\n    const [localTimetable, setLocalTimetable] = useState(data.ID);\r\n    const {currentTimetableID, setCurrentTimetableID} = useContext(TimetableContext);\r\n    const history = useHistory();\r\n\r\n    const routeChange = () => {\r\n        let path = SCREEN3URL;\r\n        history.push(path);\r\n    }\r\n\r\n    const handleTimeTableClicked = async () => {\r\n        document.cookie= `timetableID=${localTimetable};path=/`\r\n        await setCurrentTimetableID(localTimetable)\r\n        routeChange()\r\n    }\r\n\r\n    return (\r\n        <Card sx={{minWidth: 275}}>\r\n            <CardContent>\r\n                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                    Uploaded by {data.uploadedBy}\r\n                </Typography>\r\n                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                    Problem ID:{data.ID}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {bull}{data.days} days, {data.hours} hours\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {bull}{data.numOfClasses} classes, {data.numOfTeachers} teachers\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {bull}{data.numOfHardRules} hard rules, {data.numOfSoftRules} soft rules\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {bull}{data.numOfUsersSolving} Users are trying to solve it\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {bull}{data.bestScore} -max fitness so far\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleTimeTableClicked}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n",
    "import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport {makeStyles} from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        backgroundColor: 'lightyellow',\r\n        color: 'gray',\r\n    },\r\n}))\r\n\r\nexport default function Navbar({user}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\" className={classes.toolbar}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    Welcome {user}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n",
    "export async function uploadFile(file) {\r\n    const url = \"/server_Web_exploded/api/dashboard\";\r\n    const method = 'POST';\r\n    const result = await fetchXmlWrapper(method, url, file);\r\n    return result;\r\n}\r\n\r\nconst fetchXmlWrapper = async (method, url, file) => {\r\n    const options = {\r\n        method,\r\n        headers: {\r\n            'Content-Type': 'application/xml',\r\n        },\r\n        body: file,\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n    }\r\n\r\n\r\n    const result = await fetch(url, options);\r\n    let responseBody;\r\n    if (result.headers.get(\"content-type\").includes(\"application/json\")) {\r\n        responseBody = await result.json();\r\n    } else {\r\n        responseBody = await result.text();\r\n        console.log(\"in fileServices.js\")\r\n        console.log(responseBody);\r\n    }\r\n    if (!result.ok) {\r\n        console.log(\"error\");\r\n        throw  new Error(\"error\") //todo create an exception that gets the response.body , status code, status text\r\n    }\r\n\r\n    return responseBody;\r\n}",
    "import UserList from \"./UserList\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {makeStyles} from '@mui/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport * as Screen2Services from \"../../services/Screen2Services\";\r\nimport Summary from \"./Summary\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Button from '@mui/material/Button';\r\nimport * as FileServices from \"../../services/FileServices\";\r\nimport {UserContext} from \"../../components/UserContext\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '10px 70px',\r\n        spacing: 2,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'top-center',\r\n        minHeight: '100vh',\r\n        backgroundColor: \"pink\",\r\n    },\r\n    aroundButton: {\r\n        padding: '10px 10px',\r\n        spacing: 2,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'top-center',\r\n        backgroundColor: \"pink\",\r\n    },\r\n    summaries: {\r\n        alignItems: 'top-center',\r\n        backgroundColor: 'lightyellow',\r\n    },\r\n    button: {\r\n        backgroundColor: 'pink',\r\n        margin: '5px',\r\n    },\r\n}))\r\n\r\nconst renderAlert = (alertText) => {\r\n    return (\r\n        <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            {alertText}\r\n        </Alert>\r\n    );\r\n}\r\n\r\nconst Index = () => {\r\n    const {currentUser} = useContext(UserContext);\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    const [summaries, setSummaries] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [alertText, setAlertText] = React.useState('');\r\n    //TODO need to get all the information all the time\r\n    //we'll later add a dependency to the useEffect that will change every x seconds and that will create a pull\r\n\r\n    useEffect(() => {\r\n        const fetchAllData = async () => {\r\n            // calling all API calls in parallel, and waiting until they ALL finish before setting\r\n            try {\r\n                const dashboardPayload = await Screen2Services.getAll();\r\n                setUsers(dashboardPayload.users);\r\n                setSummaries([...dashboardPayload.timetables]);\r\n                setAlertText(\"\");\r\n            } catch (e) {\r\n                console.log(\"inside screen2/index\", e);\r\n                setAlertText('oops something happend, please reload page');\r\n            }\r\n        };\r\n\r\n        const interval = setInterval(() => {\r\n            fetchAllData();\r\n        }, 5000) //todo return to 1 sec\r\n        fetchAllData()//and initially\r\n        return () => clearInterval(interval); // in order to clear the interval when the component unmounts.\r\n    }, []);\r\n\r\n    const handleFileUpload = async (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        const result = await FileServices.uploadFile(event.target.files[0]);\r\n        if (result !== \"OK\") {\r\n            setAlertText(result);\r\n        }\r\n        console.log(\"in screen2Index handleFileUpload()\");\r\n        console.log(result);//todo handle bad xml\r\n    };\r\n\r\n    return (\r\n        <Grid container direction={\"column\"}>\r\n            <Navbar user={currentUser}/>\r\n            <Grid item className={classes.aroundButton}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    className={classes.button}\r\n                >\r\n                    Upload File\r\n                    <input\r\n                        type=\"file\"\r\n                        name={\"file\"}\r\n                        onChange={handleFileUpload}\r\n                        hidden\r\n                        accept={\".xml\"}\r\n                    />\r\n                </Button>\r\n            </Grid>\r\n            <Grid container className={classes.root} direction={\"row\"}>\r\n                <Grid item xs={12} md={4}>\r\n                    <UserList users={users}/>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={8}>\r\n                    <Grid container direction={\"row\"} className={classes.summaries}>\r\n                        {summaries.map(summary => {\r\n                            return (\r\n                                <Summary data={summary}/>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n                {alertText && renderAlert(alertText)}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nexport default Index;\r\n",
    "import React from 'react';\r\nimport {makeStyles} from '@mui/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {},\r\n}));\r\n\r\nexport default function DropDown({\r\n                                     label,\r\n                                     options,      // an array of {key, value} pairs\r\n                                     currentValue, // a single key value, must be a valid option\r\n                                     keyPropName,  // the name of the \"key\" property from the pair\r\n                                     namePropName, // the name of the \"name\" property from the pair\r\n                                     onChange,     // callback function that notifies \"outside\" that the user selected a different option\r\n                                 }) {\r\n    const classes = useStyles();\r\n    let tempOptions = options.sort((s1, s2) => (s1.name).localeCompare(s2.name))\r\n\r\n    const extendedOptions = [{\r\n        [keyPropName]: '__EMPTY_OPTION',\r\n        [namePropName]: '',\r\n    }, ...tempOptions];\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <Select\r\n                value={currentValue}\r\n                onChange={onChange}\r\n            >\r\n                {extendedOptions.map((option) => <MenuItem key={option[keyPropName]}\r\n                                                           value={option[keyPropName]}>{option[namePropName]}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n",
    "import {Checkbox, FormControlLabel, Grid, TextField} from \"@mui/material\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst CheckedTextBox = ({label, value, handleValueChange, valueError}) => {\r\n    const [checked, setChecked] = useState(!!value);\r\n\r\n    useEffect(() => {\r\n        if (!checked) {\r\n            handleValueChange(undefined)\r\n        }\r\n    }, [checked]);\r\n\r\n    //object and not array, for example: endPredicates: {numOfGenerations: 120} or\r\n    // endPredicates: {numOfGenerations: 120, fitnessScore: 92.3, time: 2}\r\n    return (\r\n        <Grid container>\r\n            <FormControlLabel\r\n                control={<Checkbox checked={checked}\r\n                                   onChange={(e) => {\r\n                                       setChecked(e.target.checked);\r\n                                   }}/>}\r\n                label={label}/>\r\n            <TextField\r\n                disabled={!checked}\r\n                error={valueError}\r\n                helperText={valueError ? 'Invalid value (must be a number)' : ''}\r\n                value={value || ''}\r\n                onChange={(e) => {\r\n                    handleValueChange(e.target.value);\r\n                }}/>\r\n        </Grid>\r\n    );\r\n}\r\nexport default CheckedTextBox;\r\n",
    "import CheckedTextBox from './CheckedTextBox'\r\nimport {Grid} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        alignItems: \"start\",\r\n        justifyContent: \"space-between\",\r\n        padding: 20,\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n}));\r\n\r\nconst EndPredicates = ({endPredicates, handleEndPredicatesChange}) => {\r\n    const floatRegEx = /^\\d*(\\.\\d+)?$/;\r\n    const [valueError, setValueError] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleTextChanged = (predicateName, value) => {\r\n        if (floatRegEx.test(value)) {\r\n            setValueError(false);\r\n            handleEndPredicatesChange({...endPredicates, [predicateName]: parseFloat(value)});\r\n        } else {\r\n            setValueError(true);\r\n        }\r\n    };\r\n\r\n    //object and not array, for example: endPredicates: {numOfGenerations: 120} or\r\n    // endPredicates: {numOfGenerations: 120, fitnessScore: 92.3, time: 2}\r\n    return (\r\n        <Grid container className={classes.root} direction={\"column\"}>\r\n            <Grid item>\r\n                <CheckedTextBox label=\"Num Of Generations\"\r\n                                value={endPredicates.numOfGenerations}\r\n                                handleValueChange={(value) => {\r\n                                    handleTextChanged('numOfGenerations', value)\r\n                                }}\r\n                                valueError={valueError}/>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <CheckedTextBox label=\"Fitness Score\"\r\n                                value={endPredicates.fitnessScore}\r\n                                handleValueChange={(value) => {\r\n                                    handleTextChanged('fitnessScore', value);\r\n                                }}\r\n                                valueError={valueError}/>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n                <CheckedTextBox label=\"Time\"\r\n                                value={endPredicates.time}\r\n                                handleValueChange={(value) => {\r\n                                    handleTextChanged('time', value);\r\n                                }}\r\n                                valueError={valueError}/>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\nexport default EndPredicates;",
    "import Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {ButtonGroup, IconButton, TextField} from \"@mui/material\";\r\nimport DropDown from \"../../components/Dropdown\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport React, {useCallback, useState} from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport EndPredicates from './EndPredicates'\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst intRegEx = /^\\d+$/;\r\nconst floatRegEx = /^\\d*(\\.\\d+)?$/;\r\nconst selectionTypes = [\r\n    {name: \"Truncation\", id: \"Truncation\"},\r\n    {name: \"Roulette Wheel\", id: \"RouletteWheel\"},\r\n    {name: \"Tournament\", id: \"Tournament\"},\r\n];\r\nconst crossoverTypes = [\r\n    {name: \"Daytime Oriented\", id: \"DaytimeOriented\"},\r\n    {name: \"Aspect Oriented\", id: \"AspectOriented\"},\r\n];\r\nconst orientations = [{name: \"Teacher\", id: \"teacher\"}, {name: \"Class\", id: \"class\"}];\r\nconst mutationTypes = [{name: \"Flipping\", id: \"Flipping\"}, {name: \"Sizer\", id: \"Sizer\"}];\r\nconst flippingComponent = [\r\n    {name: \"Hour\", id: \"H\"},\r\n    {name: \"Day\", id: \"D\"},\r\n    {name: \"Teacher\", id: \"T\"},\r\n    {name: \"Class\", id: \"C\"},\r\n    {name: \"Subject\", id: \"S\"},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        alignItems: \"start\",\r\n        justifyContent: \"space-between\",\r\n        padding: 20,\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n}));\r\n\r\nconst AlgorithmConfiguration = ({algorithmConfiguration, handleAlgorithmConfigSave}) => {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState(algorithmConfiguration); //currentSettings\r\n    //#region useState() for flags indicating incorrect type in field (for helpText)\r\n    const [strideError, setStrideError] = useState(false);\r\n    const [populationSizeError, setPopulationSizeError] = useState(false);\r\n    const [elitismError, setElitismError] = useState(false);\r\n    const [pteError, setPteError] = useState(false);\r\n    const [topPercentError, setTopPercentError] = useState(false);\r\n    const [cuttingPointsError, setCuttingPointsError] = useState(false);\r\n    const [probabilityError, setProbabilityError] = useState(false);\r\n    const [maxTuplesError, setMaxTuplesError] = useState(false);\r\n    const [totalTuplesError, setTotalTuplesError] = useState(false);\r\n    //#endregion\r\n\r\n    const handleStrideChange = useCallback((e) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (intRegEx.test(value)) {\r\n            setStrideError(false);\r\n            setData({\r\n                ...data,\r\n                stride: parseInt(value, 10),\r\n            });\r\n        } else {\r\n            setStrideError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handlePopulationSizeChange = useCallback((e) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (intRegEx.test(value)) {\r\n            setPopulationSizeError(false);\r\n            const engineSettings = {...data.engineSettings, populationSize: parseInt(value, 10)};\r\n            setData({...data, engineSettings});\r\n        } else {\r\n            setPopulationSizeError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleEndPredicatesChange = useCallback((endPredicates) => {\r\n        setData({...data, endPredicates});\r\n    }, [data]);\r\n\r\n    //#region selection related\r\n    const setValueInSelection = useCallback((propName, value) => {\r\n        const selection = {\r\n            ...data.engineSettings.selection,\r\n            [propName]: value,\r\n        };\r\n\r\n        const engineSettings = {...data.engineSettings, selection};\r\n\r\n        setData({...data, engineSettings});\r\n    }, [data]);\r\n\r\n    const handleElitismChange = useCallback((e) => {\r\n        const value = e.target.value.trim() || '0'; // if after trim we have an empty string - use '0'\r\n        if (intRegEx.test(value)) {\r\n            setElitismError(false);\r\n            setValueInSelection('elitism', parseInt(value, 10));\r\n        } else {\r\n            setElitismError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handlePTEChange = useCallback((e) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (floatRegEx.test(value)) {\r\n            setPteError(false);\r\n            setValueInSelection('pte', parseFloat(value));\r\n        } else {\r\n            setPteError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleTopPercentChange = useCallback((e) => {\r\n        const value = e.target.value.trim();\r\n        if (intRegEx.test(value)) {\r\n            setTopPercentError(false);\r\n            setValueInSelection('topPercent', parseInt(value, 10));\r\n        } else {\r\n            setTopPercentError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const renderSelectionExtraField = () => {\r\n        if (data.engineSettings.selection.name === 'Tournament') {\r\n            return (\r\n                <TextField\r\n                    required\r\n                    error={pteError}\r\n                    helperText={pteError ? 'Invalid value (must be a number)' : ''}\r\n                    id=\"pte\"\r\n                    label=\"PTE\"\r\n                    defaultValue={data.engineSettings.selection.pte}\r\n                    onChange={handlePTEChange}/>\r\n            );\r\n        } else {\r\n            // if (data.engineSettings.selection.name === 'Truncation')\r\n            return (\r\n                <TextField\r\n                    required\r\n                    error={topPercentError}\r\n                    helperText={topPercentError ? 'Invalid value (must be a number)' : ''}\r\n                    id=\"topPercent\"\r\n                    label=\"Top Percent\"\r\n                    defaultValue={data.engineSettings.selection.topPercent}\r\n                    onChange={handleTopPercentChange}/>\r\n            );\r\n        }\r\n    };\r\n    //#endregion\r\n\r\n    //#region crossover related\r\n    const handleCuttingPointsChange = useCallback((e) => {\r\n        const value = e.target.value.trim();\r\n        if (intRegEx.test(value)) {\r\n            setCuttingPointsError(false);\r\n            setValueInCrossover('cuttingPoints', parseInt(value, 10));\r\n        } else {\r\n            setCuttingPointsError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const setValueInCrossover = useCallback((propName, value) => {\r\n        const crossover = {\r\n            ...data.engineSettings.crossover,\r\n            [propName]: value,\r\n        };\r\n\r\n        const engineSettings = {...data.engineSettings, crossover};\r\n\r\n        setData({...data, engineSettings});\r\n    }, [data]);\r\n    //#endregion\r\n\r\n    //#region mutation related\r\n    const handleAddMutation = useCallback(() => {\r\n        const mutationsArray = data.engineSettings.mutations;\r\n        const newEmptyMutation = {\r\n            name: mutationTypes[0].id,\r\n        };\r\n\r\n        const newMutationsArray = [...mutationsArray, newEmptyMutation];\r\n        const engineSettings = {...data.engineSettings, mutations: newMutationsArray};\r\n\r\n        setData({...data, engineSettings});\r\n    }, [data]);\r\n\r\n    const setValueInMutation = useCallback((propName, value, index) => {\r\n        const mutationsArray = data.engineSettings.mutations;\r\n\r\n        const mutation = {\r\n            ...mutationsArray[index],\r\n            [propName]: value,\r\n        };\r\n\r\n        const newMutationsArray = [...mutationsArray.slice(0, index), mutation, ...mutationsArray.slice(index + 1)];\r\n        const engineSettings = {...data.engineSettings, mutations: newMutationsArray};\r\n\r\n        setData({...data, engineSettings});\r\n    }, [data]);\r\n\r\n    const handleProbabilityChange = useCallback((e, index) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (floatRegEx.test(value)) {\r\n            setProbabilityError(false);\r\n            setValueInMutation('probability', parseFloat(value), index);\r\n        } else {\r\n            setProbabilityError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleTotalTuplesChange = useCallback((e, index) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (intRegEx.test(value)) {\r\n            setTotalTuplesError(false);\r\n            setValueInMutation('totalTuples', parseInt(value, 10), index);\r\n        } else {\r\n            setTotalTuplesError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const handleMaxTuplesChange = useCallback((e, index) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (intRegEx.test(value)) {\r\n            setMaxTuplesError(false);\r\n            setValueInMutation('maxTuples', parseInt(value, 10), index);\r\n        } else {\r\n            setMaxTuplesError(true);\r\n        }\r\n    }, [data]);\r\n\r\n    const renderMutation = (mutation, index) => {\r\n        return (\r\n            <Grid container className={classes.root}>\r\n                <DropDown\r\n                    label={'Mutation'}\r\n                    options={mutationTypes}\r\n                    currentValue={mutation.name}\r\n                    keyPropName='id'\r\n                    namePropName='name'\r\n                    onChange={(e) => setValueInMutation('name', e.target.value, index)}\r\n                />\r\n                <TextField\r\n                    required\r\n                    label='Probability'\r\n                    error={probabilityError}\r\n                    helperText={probabilityError ? 'Invalid value (must be a number)' : ''}\r\n                    defaultValue={mutation.probability}\r\n                    onChange={(e) => handleProbabilityChange(e, index)}\r\n                />\r\n                {renderMutationExtraFields(mutation, index)}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    const renderMutationExtraFields = (mutation, index) => {\r\n        if (mutation.name === 'Sizer') {\r\n            return (<TextField\r\n                required\r\n                error={totalTuplesError}\r\n                helperText={totalTuplesError ? 'Invalid value (must be a number)' : ''}\r\n                label='Total Tuples'\r\n                defaultValue={mutation.totalTuples}\r\n                onChange={(e) => handleTotalTuplesChange(e, index)}\r\n            />)\r\n        } else if (mutation.name === 'Flipping') {\r\n            return (\r\n                <Grid container className={classes.root}>\r\n                    <TextField\r\n                        required\r\n                        error={maxTuplesError}\r\n                        helperText={maxTuplesError ? 'Invalid value (must be a number)' : ''}\r\n                        label='Max Tuples'\r\n                        defaultValue={mutation.maxTuples}\r\n                        onChange={(e) => handleMaxTuplesChange(e, index)}\r\n                    />\r\n                    <DropDown\r\n                        label={'Component'}\r\n                        options={flippingComponent}\r\n                        currentValue={mutation.component}\r\n                        keyPropName='id'\r\n                        namePropName='name'\r\n                        onChange={(e) => setValueInMutation('component', e.target.value, index)}\r\n                    />\r\n                </Grid>);\r\n        }\r\n    };\r\n    //#endregion\r\n\r\n    //#region render accordions\r\n    const renderGeneralDetails = () => {\r\n        return (<Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography>Population and Stride</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Grid container className={classes.root}>\r\n                    <TextField\r\n                        required\r\n                        error={populationSizeError}\r\n                        helperText={populationSizeError ? 'Invalid value (must be a number)' : ''}\r\n                        label='Population size'\r\n                        defaultValue={data.engineSettings.populationSize}\r\n                        onChange={handlePopulationSizeChange}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        error={strideError}\r\n                        helperText={strideError ? 'Invalid value (must be a number)' : ''}\r\n                        id='stride'\r\n                        label='Stride'\r\n                        defaultValue={data.stride}\r\n                        onChange={handleStrideChange}\r\n                    />\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>);\r\n    };\r\n\r\n    const renderEndConditions = () => {\r\n        return (<Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\">\r\n                <Typography>End Conditions</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <EndPredicates endPredicates={data.endPredicates}\r\n                               handleEndPredicatesChange={handleEndPredicatesChange}/>\r\n            </AccordionDetails>\r\n        </Accordion>);\r\n    };\r\n\r\n    const renderSelection = () => {\r\n        return (<Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n            >\r\n                <Typography>Selection</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Grid container className={classes.root}>\r\n                    <DropDown\r\n                        label={\"Selection\"}\r\n                        options={selectionTypes}\r\n                        currentValue={data.engineSettings.selection.name}\r\n                        keyPropName=\"id\"\r\n                        namePropName=\"name\"\r\n                        onChange={(e) => setValueInSelection('name', e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        error={elitismError}\r\n                        helperText={elitismError ? 'Invalid value (must be a number)' : ''}\r\n                        label='Elitism'\r\n                        value={data.engineSettings.selection.elitism}\r\n                        onChange={handleElitismChange}\r\n                    />\r\n                    {data.engineSettings.selection.name === 'RouletteWheel' ? '' : renderSelectionExtraField()}\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>);\r\n    };\r\n\r\n    const renderCrossover = () => {\r\n        return (<Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n            >\r\n                <Typography>Crossover</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Grid container className={classes.root}>\r\n                    <DropDown\r\n                        label={\"Crossover\"}\r\n                        options={crossoverTypes}\r\n                        currentValue={data.engineSettings.crossover.name}\r\n                        keyPropName=\"id\"\r\n                        namePropName=\"name\"\r\n                        onChange={(e) => setValueInCrossover('name', e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        error={cuttingPointsError}\r\n                        helperText={cuttingPointsError ? 'Invalid value (must be a number)' : ''}\r\n                        label='Cutting Points'\r\n                        value={data.engineSettings.crossover.cuttingPoints}\r\n                        onChange={handleCuttingPointsChange}\r\n                    />\r\n                    {data.engineSettings.crossover.name === 'DaytimeOriented' ? '' :\r\n                        <DropDown\r\n                            label={\"Orientation\"}\r\n                            options={orientations}\r\n                            currentValue={data.engineSettings.crossover.orientation}\r\n                            keyPropName=\"id\"\r\n                            namePropName=\"name\"\r\n                            onChange={(e) => setValueInCrossover('orientation', e.target.value)}\r\n                        />}\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>);\r\n    };\r\n\r\n    const renderMutations = () => {\r\n        return (<Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon/>}\r\n                aria-controls=\"panel2a-content\"\r\n                id=\"panel2a-header\"\r\n            >\r\n                <Typography>Mutations</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <IconButton onClick={handleAddMutation}>\r\n                    <AddIcon/>\r\n                </IconButton>\r\n                {data.engineSettings.mutations.map(renderMutation)}\r\n            </AccordionDetails>\r\n        </Accordion>);\r\n    };\r\n    //#endregion\r\n\r\n    const noError = !strideError && !populationSizeError && !elitismError && !pteError && !topPercentError\r\n        && !cuttingPointsError && !probabilityError && !maxTuplesError && !totalTuplesError;\r\n    const saveEnabled = (data !== algorithmConfiguration) && noError;\r\n\r\n    return (\r\n        <Paper>\r\n            {/*TODO maybe make text fields visible only if the box is ticked*/}\r\n            {renderGeneralDetails()}\r\n            {renderEndConditions()}\r\n            {renderSelection()}\r\n            {renderCrossover()}\r\n            {renderMutations()}\r\n            <ButtonGroup>\r\n                <Button disabled={!saveEnabled}\r\n                        onClick={() => {\r\n                            handleAlgorithmConfigSave(data);\r\n                        }}>Save</Button>\r\n                <Button onClick={() => {\r\n                    setData(algorithmConfiguration);\r\n                }}>Cancel</Button>\r\n            </ButtonGroup>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default AlgorithmConfiguration;\r\n",
    "import * as React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function CircularIndeterminate() {\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CircularProgress/>\r\n        </Box>\r\n    );\r\n    //\r\n    // return (\r\n    //     <div className={classes.root}>\r\n    //         <CircularProgress />\r\n    //     </div>\r\n    // );\r\n}",
    "import Accordion from \"@mui/material/Accordion\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport CircularIndeterminate from \"../../components/CircularIndeterminate\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport React from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\"\r\n    },\r\n    settings: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n    requirements: {\r\n        padding: 10,\r\n    },\r\n    schoolClass: {\r\n        border: 1,\r\n        borderBlockColor: \"black\",\r\n        padding: 10,\r\n        margin: 50,\r\n    }\r\n}));\r\n\r\nconst TimetableDetails = ({timetable}) => {\r\n    const classes = useStyles();\r\n\r\n    // if timetable is undefined\r\n    if (!timetable) {\r\n        return (<CircularIndeterminate/>);\r\n    }\r\n\r\n    //days, hours subjects, teachers, classes, rules\r\n    return (\r\n        <Paper>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>General Details</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container className={classes.root} direction={\"column\"}>\r\n                        <Grid item>\r\n                            <Grid container className={classes.root}>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    Days: {timetable.days}\r\n                                </Typography>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    Hours: {timetable.hours}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container className={classes.root}>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    Table ID: {timetable.ID}\r\n                                </Typography>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    Uploaded by: {timetable.uploadedBy}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Rules</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container direction={\"column\"} className={classes.root}>\r\n                        <Typography>\r\n                            Hard rules Weight:\r\n                            {timetable.hardRulesWeight}\r\n                        </Typography>\r\n                        {timetable.rules.map(rule => {\r\n                            return (\r\n                                <Grid item>\r\n                                    <Grid container className={classes.settings}>\r\n                                        <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                            Rule Name: {rule.ruleName}\r\n                                        </Typography>\r\n                                        {rule.ruleName === \"Sequentiality\" &&\r\n                                        <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                            Total Hours: {rule.totalHours}\r\n                                        </Typography>}\r\n                                        <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                            Rule Type: {rule.ruleType}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>School classes </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container direction={\"column\"} className={classes.root}>\r\n                        {Object.keys(timetable.schoolClasses).map((key, index) => {\r\n                            return (\r\n                                <Grid item>\r\n                                    <Grid container direction={\"column\"} sx={{border: 1}}>\r\n                                        <Grid item>\r\n                                            <Grid container className={classes.settings}>\r\n                                                <Typography>ID: {key} Name\r\n                                                    : {timetable.schoolClasses[key].name}</Typography>\r\n\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Grid container className={classes.settings}>\r\n                                                <Typography>\r\n                                                    Requirements:\r\n                                                </Typography>\r\n                                                {timetable.schoolClasses[key].requirements.map(requirement => {\r\n                                                    return (\r\n                                                        <Grid container direction={\"row\"}\r\n                                                              className={classes.requirements}>\r\n                                                            <Grid item>\r\n                                                                <Typography>\r\n                                                                    Subject: {requirement.subject.name} Hours: {requirement.hours}\r\n                                                                </Typography>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Subjects</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container className={classes.root} direction={\"column\"}>\r\n                        {Object.keys(timetable.subjects).map((key, index) => {\r\n                            return (\r\n                                <Grid item>\r\n                                    <Grid container className={classes.settings} direction={\"column\"}>\r\n                                        <Typography>\r\n                                            {timetable.subjects[key].id}. {timetable.subjects[key].name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>Teachers</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container className={classes.root} direction={\"column\"}>\r\n                        {Object.keys(timetable.teachers).map((key, index) => {\r\n                            return (\r\n                                <Grid item>\r\n                                    <Grid container className={classes.settings} direction={\"column\"}\r\n                                          sx={{border: 1}}>\r\n                                        <Typography>\r\n                                            {timetable.teachers[key].id}. {timetable.teachers[key].name}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            working hours:{timetable.teachers[key].workingHours}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Teaches:\r\n                                        </Typography>\r\n                                        {Object.keys(timetable.teachers[key].subjects).map((subjectKey, index) => {\r\n                                            return (<Typography>\r\n                                                {timetable.teachers[key].subjects[subjectKey].id}. {timetable.teachers[key].subjects[subjectKey].name}\r\n                                            </Typography>)\r\n                                        })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default TimetableDetails;",
    "import AlgorithmConfiguration from \"./AlgorithmConfiguration\";\r\nimport Box from '@mui/material/Box';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\r\nimport {makeStyles} from '@mui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport TimetableDetails from \"./TimetableDetails\";\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {/*<Typography>*/}\r\n                    {children}\r\n                    {/*</Typography>*/}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: \"#FFFFC5\", // yellow\r\n    },\r\n}));\r\n\r\nconst InfoTabs = ({algorithmConfiguration, handleAlgorithmConfigSave, timetable}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                variant=\"scrollable\"\r\n                scrollButtons={true}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                aria-label=\"scrollable force tabs example\">\r\n                <Tab label=\"Algorithm Configuration\" icon={<EqualizerIcon/>} {...a11yProps(0)} />\r\n                <Tab label=\"Timetable Details\" icon={<DescriptionIcon/>} {...a11yProps(1)} />\r\n            </Tabs>\r\n\r\n            <TabPanel value={value} index={0}>\r\n                <AlgorithmConfiguration algorithmConfiguration={algorithmConfiguration}\r\n                                        handleAlgorithmConfigSave={handleAlgorithmConfigSave}/>\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                <TimetableDetails timetable={timetable}/>\r\n            </TabPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoTabs;\r\n",
    "import {fetchWrapper} from \"./Utils\";\r\n\r\nexport const getTimetableDetails = async (timetableID) => {\r\n    const url = `/server_Web_exploded/api/timetable/details?timetableID=${timetableID}`;\r\n    const method = 'GET';\r\n    return await fetchWrapper(method, url);\r\n}\r\n\r\nexport const getAlgoConfig = async (timetableID) => {\r\n    const url = `/server_Web_exploded/api/algoconfig?timetableID=${timetableID}`;\r\n    const method = 'GET';\r\n    return await fetchWrapper(method, url);\r\n}\r\n\r\nexport const getOtherSolutionsInfo = async (timetableID) => {\r\n    const url = `/server_Web_exploded/api/othersolutionsinfo?timetableID=${timetableID}`;\r\n    const method = 'GET';\r\n    return await fetchWrapper(method, url);\r\n}\r\n\r\nexport const getProgress = async (timetableID) => {\r\n    const url = `/server_Web_exploded/api/actions?timetableID=${timetableID}`;\r\n    const method = 'GET';\r\n    return await fetchWrapper(method, url);\r\n}\r\n\r\nexport const getBestSolution = async (timetableID) => {\r\n    const url = `/server_Web_exploded/api/bestsolution?timetableID=${timetableID}`;\r\n    const method = 'GET';\r\n    return await fetchWrapper(method, url);\r\n}\r\n",
    "import CircularIndeterminate from \"../../components/CircularIndeterminate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\"\r\n    },\r\n    settings: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n    requirements: {\r\n        padding: 10,\r\n    },\r\n    schoolClass: {\r\n        border: 1,\r\n        borderBlockColor: \"black\",\r\n        padding: 10,\r\n        margin: 50,\r\n    }\r\n}));\r\n\r\nconst OtherSolutions = ({otherSolutionsList}) => {\r\n    const classes = useStyles();\r\n\r\n    // if it's undefined\r\n    if (!otherSolutionsList) {\r\n        return (<CircularIndeterminate/>);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction={\"column\"}>\r\n            {otherSolutionsList.length ?\r\n                <Typography>\r\n                    Users solving the same problem (and their BEST score so far):\r\n                </Typography>\r\n                :\r\n                <Typography>\r\n                    No users are currently solving the problem\r\n                </Typography>\r\n            }\r\n            <Grid item>\r\n                <Grid container className={classes.settings}>\r\n\r\n                    {otherSolutionsList.map(solution => {\r\n                        return (\r\n                            <Grid container className={classes.settings}>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    {solution.userName}\r\n                                </Typography>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    {solution.currentGeneration}\r\n                                </Typography>\r\n                                <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                                    {solution.bestScore}\r\n                                </Typography>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OtherSolutions\r\n",
    "import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport {useState} from \"react\";\r\n\r\nfunction createData(hour, sunday, monday, tuesday, Wednesday) {\r\n    return {hour, sunday, monday, tuesday, Wednesday};\r\n}\r\n\r\n\r\nconst timeSlotToString = (quintets) => {\r\n    let slotString = \"\";\r\n\r\n    for (let i = 0; i < quintets.length; i++) {\r\n        let id1 = quintets[i].schoolClassID;\r\n        let s1 = quintets[i].schoolClassName;\r\n        let id2 = quintets[i].subjectID;\r\n        let s2 = quintets[i].subjectName;\r\n        slotString += `${id1} ${s1}, ${id2} ${s2}\\n`;\r\n    }\r\n\r\n    return slotString;\r\n}\r\n\r\n\r\nconst generateMatrix = (quintets, days, hours) => {\r\n    let matrix = [...new Array(hours)].map(elem => new Array(days));\r\n\r\n    for (let h = 0; h < hours; h++) {\r\n        for (let d = 0; d < days; d++) {\r\n            matrix[h][d] = [];\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < quintets.length; i++) {\r\n        matrix[quintets[i].hour][quintets[i].day].push(quintets[i]);\r\n    }\r\n\r\n    let displayMatrix = [...new Array(hours)].map(elem => new Array(days));\r\n    for (let h = 0; h < hours; h++) {\r\n        for (let d = 0; d < days; d++) {\r\n            displayMatrix[h][d] = timeSlotToString(matrix[h][d]);\r\n        }\r\n    }\r\n\r\n    return displayMatrix;\r\n}\r\n\r\nconst TeacherView = ({quintets, days, hours}) => {\r\n    const rows = generateMatrix(quintets, days, hours);\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{minWidth: 650}} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Hour</TableCell>\r\n                        {Array.from(Array(days).keys()).map(day => <TableCell>{day}</TableCell>)}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row, index) => {\r\n                        return (\r\n                            <TableRow\r\n                                sx={{'&:last-child td, &:last-child th': {border: 0}}}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {index}\r\n                                </TableCell>\r\n                                {row.map((day) => <TableCell>{day}</TableCell>)}\r\n                            </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default TeacherView;",
    "import DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TeacherView from \"./TeacherView\";\r\nimport * as Screen3Services from \"../../services/Screen3Services\";\r\nimport {TimetableContext} from \"../../components/TimetableContext\";\r\nimport {getBestSolution} from \"../../services/Screen3Services\";\r\nimport CircularIndeterminate from \"../../components/CircularIndeterminate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grid: {\r\n        margin: 0,\r\n        width: '100%',\r\n        backgroundColor: '#FFFFC5',//yellow\r\n        alignItems: 'stretch',\r\n    },\r\n    root: {\r\n        padding: '50px 70px',\r\n        spacing: 2,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'top-center',\r\n        minHeight: \"100vh\",\r\n    },\r\n    settings: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\",\r\n        width: '100%',\r\n        height: 400,\r\n        maxWidth: 300,\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n    actions: {\r\n        padding: 20,\r\n        margin: 20,\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    tempGrid: {\r\n        padding: 20,\r\n        margin: 20,\r\n        backgroundColor: \"pink\",\r\n    },\r\n}));\r\n\r\nconst SolutionDialog = ({handleClose, days, hours, solution}) => {\r\n    const {currentTimetableID} = useContext(TimetableContext);\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={true} fullWidth={true} maxWidth={\"xl\"}>\r\n            <DialogTitle>Best Solution</DialogTitle>\r\n            {solution? <TeacherView quintets={solution.solutionQuintets} hours={hours} days={days}/>: <CircularIndeterminate/>}\r\n        </Dialog>\r\n    );\r\n}\r\nexport default SolutionDialog;",
    "import Button from '@mui/material/Button';\r\nimport {Alert, AlertTitle, ButtonGroup, Container, Grid} from \"@mui/material\";\r\nimport InfoTabs from \"./InfoTabs\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport Navbar from \"../../components/Navbar\";\r\nimport {TimetableContext} from \"../../components/TimetableContext\";\r\nimport {UserContext} from \"../../components/UserContext\"\r\nimport * as Utils from \"../../services/Utils\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as Screen3Services from \"../../services/Screen3Services\";\r\nimport OtherSolutions from \"./OtherSolutions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularIndeterminate from \"../../components/CircularIndeterminate\";\r\nimport SolutionDialog from \"./SolutionDialog\";\r\n\r\nconst fakeAlgoConfig = {\r\n    timetableID: 0, //important to notice which timetable we're dealing with\r\n    stride: \"10\",\r\n    endPredicates: {numOfGenerations: \"700\", fitnessScore: \"97.1\", time: \"4\"},\r\n    engineSettings: {\r\n        populationSize: \"60\",\r\n        selection: {name: \"RouletteWheel\", elitism: \"5\"},\r\n        crossover: {name: \"DaytimeOriented\", \"cuttingPoints\": \"5\"},\r\n        mutations: [\r\n            {name: \"Flipping\", probability: \"0.2\", maxTuples: \"4\", component: \"H\"}],\r\n    }\r\n}\r\n\r\nconst SCREEN2URL = \"/server_Web_exploded/screen2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '50px 70px',\r\n        spacing: 2,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'top-center',\r\n    },\r\n    settings: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\",\r\n        width: '100%',\r\n        height: 400,\r\n        maxWidth: 300,\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n    progressRow: {\r\n        spacing: 2,\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"#D3D3D3\", //light gray\r\n    },\r\n    actions: {\r\n        padding: 20,\r\n        margin: 20,\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    tempGrid: {\r\n        padding: 20,\r\n        margin: 20,\r\n        backgroundColor: \"pink\",\r\n    },\r\n}));\r\n\r\nconst renderAlert = (alertText) => {\r\n    return (\r\n        <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            {alertText}\r\n        </Alert>\r\n    );\r\n}\r\n\r\nconst Screen3 = () => {\r\n    const {currentUser} = useContext(UserContext);\r\n    const {currentTimetableID} = useContext(TimetableContext);\r\n    const [timetable, setTimetable] = useState();\r\n    const [otherSolutions, setOtherSolutions] = useState([]);\r\n    const [progress, setProgress] = useState();\r\n    const [bestSolution, setBestSolution] = useState();\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const emptyAlgoConfig = {\r\n        timetableID: currentTimetableID,\r\n        stride: undefined,\r\n        endPredicates: {numOfGenerations: undefined, fitnessScore: undefined, time: undefined},\r\n        engineSettings: {\r\n            populationSize: undefined,\r\n            selection: {name: \"RouletteWheel\", elitism: undefined},\r\n            crossover: {name: \"DaytimeOriented\", \"cuttingPoints\": undefined},\r\n            mutations: [],\r\n        }\r\n    }\r\n\r\n    const [algorithmConfiguration, setAlgorithmConfiguration] = useState(emptyAlgoConfig);\r\n    const [alertText, setAlertText] = React.useState('');\r\n    const [isFetching, setIsFetching] = React.useState(true);\r\n    const [isRunning, setIsRunning] = useState(false);// flag use to diabled and enable button\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        // calling all API calls in parallel, and waiting until they ALL finish before setting\r\n        const fetchStaticData = async () => {\r\n            try {\r\n                const [timetableResult, algoConfigResult] = await Promise.all([\r\n                    Screen3Services.getTimetableDetails(currentTimetableID),\r\n                    Screen3Services.getAlgoConfig(currentTimetableID),\r\n                ]);\r\n\r\n                if (timetableResult.data) {\r\n                    setTimetable(timetableResult.data);\r\n                } else {\r\n                    // setAlertText('Failed initializing app, please reload page');\r\n                    console.log(\"timetableResult.data is null\");\r\n                    console.log(timetableResult.error);\r\n                }\r\n\r\n                if (algoConfigResult.data) {\r\n                    setAlgorithmConfiguration(algoConfigResult.data);\r\n                } else {\r\n                    // setAlertText('Failed initializing app, please reload page');\r\n                    console.log(\"algoConfigResult.data is null\");\r\n                    console.log(algoConfigResult.error);\r\n                }\r\n            } catch (e) {\r\n                setAlertText('Failed initializing app, please reload page');\r\n            } finally {\r\n                setIsFetching(false);\r\n            }\r\n        }\r\n\r\n        const fetchIntervalData = async () => {\r\n            try {\r\n                const [otherSolutionsResult, progressResult, bestSolutionResult] = await Promise.all([\r\n                    Screen3Services.getOtherSolutionsInfo(currentTimetableID),\r\n                    Screen3Services.getProgress(currentTimetableID),\r\n                    Screen3Services.getBestSolution(currentTimetableID)\r\n                ]);\r\n\r\n                if (otherSolutionsResult.data) {\r\n                    setOtherSolutions(otherSolutionsResult.data);\r\n                } else {\r\n                    // setAlertText('Failed initializing app, please reload page');\r\n                    console.log(\"otherSolutionsResult.data is null\");\r\n                    console.log(otherSolutionsResult.error);\r\n                }\r\n\r\n                if (progressResult.data) {\r\n                    setProgress(progressResult.data);\r\n                } else {\r\n                    // setAlertText('Failed initializing app, please reload page');\r\n                    console.log(\"progressResult.data is null\");\r\n                    console.log(progressResult.error);\r\n                }\r\n\r\n                if (bestSolutionResult.data) {\r\n                    setBestSolution(bestSolutionResult.data);\r\n                } else {\r\n                    // setAlertText('Failed initializing app, please reload page');\r\n                    console.log(\"bestSolutionResult.data is null\");\r\n                    console.log(bestSolutionResult.error);\r\n                }\r\n\r\n            } catch (e) {\r\n                console.log(e);\r\n                // setAlertText('Failed initializing app, please reload page');\r\n            }\r\n        };\r\n\r\n        fetchStaticData();\r\n        fetchIntervalData();\r\n\r\n        const interval = setInterval(() => {\r\n            fetchIntervalData();\r\n        }, 5000) //will run every 5 seconds\r\n\r\n        //React performs the cleanup when the component unmounts.\r\n        return () => clearInterval(interval); // in order to clear the interval when the component unmounts.\r\n    }, [currentTimetableID,]);\r\n\r\n    const handleStart = useCallback(async () => {\r\n        setIsRunning(true);\r\n        try {\r\n            await Utils.fetchWrapper(\r\n                'POST',\r\n                `/server_Web_exploded/api/actions?action=start`,\r\n                algorithmConfiguration);\r\n        } catch (e) {\r\n            // TODO handle exception add alert\r\n            console.log(e);\r\n        }\r\n\r\n    }, [algorithmConfiguration]);\r\n\r\n    const handlePause = useCallback(async () => {\r\n        setIsRunning(false);\r\n        try {\r\n            // await Utils.fetchWrapper(\r\n            //     'POST',\r\n            //     `/server_Web_exploded/api/actions?action=pause`,\r\n            //     currentTimetableID)\r\n\r\n            await Utils.fetchWrapper(\r\n                'POST',\r\n                `/server_Web_exploded/api/actions?action=pause`,\r\n                algorithmConfiguration)\r\n        } catch (e) {\r\n            // TODO handle exception add alert\r\n            console.log(e);\r\n        }\r\n    }, [algorithmConfiguration]);\r\n\r\n    const handleStop = useCallback(async () => {\r\n        setIsRunning(false);\r\n        try {\r\n            await Utils.fetchWrapper(\r\n                'POST',\r\n                `/server_Web_exploded/api/actions?action=stop`,\r\n                algorithmConfiguration)\r\n        } catch (e) {\r\n            // TODO handle exception add alert\r\n            console.log(e);\r\n        }\r\n    }, [algorithmConfiguration]);\r\n\r\n    const handleResume = useCallback(async () => {\r\n        setIsRunning(true);\r\n        try {\r\n            await Utils.fetchWrapper(\r\n                'POST',\r\n                `/server_Web_exploded/api/actions?action=resume`,\r\n                algorithmConfiguration)\r\n        } catch (e) {\r\n            // TODO handle exception add alert\r\n            console.log(e);\r\n        }\r\n    }, [algorithmConfiguration]);\r\n\r\n    const renderProgress = () => {\r\n        return (\r\n            <Grid container className={classes.progressRow}>\r\n                {progress ?\r\n                    [<Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                        {progress.generationNum}\r\n                    </Typography>,\r\n                        <Typography sx={{fontSize: 14}} color=\"text.secondary\" gutterBottom>\r\n                            {progress.bestScoreInGeneration}\r\n                        </Typography>]\r\n                    :\r\n                    <Typography> Start running the algorithm to see some progress </Typography>}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const routeChange = () => {\r\n        history.push(SCREEN2URL);\r\n    }\r\n\r\n    const handleSolutionClick = useCallback(() => {\r\n        setOpen(true);\r\n    }, [open])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        // setSelectedValue(value);\r\n    };\r\n\r\n    const renderButtonGroup = () => {\r\n        return (\r\n            <ButtonGroup\r\n                aria-label=\"outlined primary button group\">\r\n                <Button id=\"start\" disabled={isRunning} onClick={handleStart}>\r\n                    start\r\n                </Button>\r\n                <Button id=\"pause\" disabled={!isRunning} onClick={handlePause}>\r\n                    pause\r\n                </Button>\r\n                <Button id=\"resume\" disabled={isRunning} onClick={handleResume}>\r\n                    resume\r\n                </Button>\r\n                <Button id=\"stop\" disabled={!isRunning} onClick={handleStop}>\r\n                    stop\r\n                </Button>\r\n                <Button id=\"bestSolution\" onClick={handleSolutionClick} disabled={!bestSolution}>\r\n                    Best Solution\r\n                </Button>\r\n                {open && <SolutionDialog\r\n                    handleClose={handleClose}\r\n                    days={timetable.days}\r\n                    hours={timetable.hours}\r\n                    solution={bestSolution}\r\n                />}\r\n                <Button id=\"back to screen 2\" onClick={routeChange}>\r\n                    Back to screen 2\r\n                </Button>\r\n            </ButtonGroup>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid item>\r\n                {isFetching && <CircularIndeterminate/>}\r\n            </Grid>\r\n            <Container maxWidth=\"xl\">\r\n                <Navbar user={currentUser}/>\r\n                <Grid container direction={\"row\"} spacing={2}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Grid container direction={\"column\"} className={classes.tempGrid}>\r\n                            <InfoTabs algorithmConfiguration={algorithmConfiguration}\r\n                                      handleAlgorithmConfigSave={setAlgorithmConfiguration}\r\n                                      timetable={timetable}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={5}>\r\n                        <Grid container direction={\"column\"} className={classes.tempGrid}>\r\n                            <Grid item>\r\n                                {renderButtonGroup()}\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container direction={\"column\"}>\r\n                                    <Grid item>\r\n                                        <Typography> My Progress (best score in generation) </Typography>\r\n                                        {renderProgress()}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <OtherSolutions otherSolutionsList={otherSolutions}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Screen3;",
    "import './App.css';\r\nimport React, {useMemo} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport SignUp from './pages/signup/SignUp' //TODO - delete later\r\nimport Screen2 from './pages/Screen2'\r\nimport {UserContext} from \"./components/UserContext\";\r\nimport Screen3 from \"./pages/Screen3\";\r\nimport {TimetableContext} from \"./components/TimetableContext\";\r\n\r\nconst getCookieDetail=(name)=>{\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    for(let i = 0; i <ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n            return c.substring(name.length + 1, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport default function App() {\r\n    const [currentUser, setCurrentUser] = React.useState(getCookieDetail(\"username\"));\r\n    const [currentTimetableID, setCurrentTimetableID] = React.useState(getCookieDetail(\"timetableID\"));\r\n    const userProviderValue = useMemo(() => ({currentUser, setCurrentUser}), [currentUser, setCurrentUser]);\r\n    const timetableProviderValue = useMemo(() => ({ currentTimetableID, setCurrentTimetableID}), [currentTimetableID, setCurrentTimetableID]);\r\n    return (\r\n        <TimetableContext.Provider value={timetableProviderValue}>\r\n            <UserContext.Provider value={userProviderValue}>\r\n                <Router>\r\n                    <div>\r\n\r\n                        {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. only one\r\n          of them to render at a time\r\n        */}\r\n                        <Switch>\r\n                            <Route exact path=\"/server_Web_exploded\">\r\n                                <Login/>\r\n                            </Route>\r\n                            <Route path=\"/server_Web_exploded/screen1\">\r\n                                <Login/>\r\n                            </Route>\r\n                            <Route path=\"/server_Web_exploded/signup\">\r\n                                <SignUp/>\r\n                            </Route>\r\n                            <Route path=\"/server_Web_exploded/screen2\">\r\n                                {currentUser ? <Screen2/> : <Login/>}\r\n                            </Route>\r\n                            <Route path=\"/server_Web_exploded/screen3\">\r\n                                {currentUser ? <Screen3/> : <Login/>}\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </UserContext.Provider>\r\n        </TimetableContext.Provider>\r\n    );\r\n}\r\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"
  ],
  "sourceRoot": ""
}